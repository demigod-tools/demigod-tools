# Use this docker-compose file to host the site locally
version: "3.7"
services:
  phpfpm:
    container_name: ${PROJECT_NAME}-phpfpm
    env_file:
      - ./.env.docker
    image: ${PHP_CONTAINER}
    command:
      - "/usr/bin/supervisord -c /etc/supervisor/supervisord.conf"
    expose:
      - "9000"
      - "8080"
    ports:
      - "8080:8080"
      - "9000:9000"
    networks:
      - demigod
    environment:
      - BACKUP_FILE_NAME=${PROJECT_NAME}.sql.gz
      - DATABASE_NAME=drupal8
      - PROJECT_NAME=${PROJECT_NAME}
    volumes:
      - "./files:/files"
      - ".:/var/www"
    links:
      - mysql
      - redis
  mysql:
    container_name: ${PROJECT_NAME}-mysql
    image: mariadb
    environment:
      PROJECT_NAME: ${PROJECT_NAME}
    env_file:
      - ./.env.docker
    networks:
      - demigod
    expose:
      - "3306"
    volumes:
      - "dbdata:/var/lib/mysql"
    ports:
      - "33067:3306"
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "--user=${MYSQL_USER}",
          "--password=${MYSQL_PASSWORD}",
          "--host=localhost",
        ]
      start_period: 60s
      retries: 10
      interval: 15s
      timeout: 5s

  redis:
    # Generic redis instance
    container_name: ${PROJECT_NAME}-redis
    image: redis
    networks:
      - demigod
    expose:
      - "6379"

  solr:
    container_name: ${PROJECT_NAME}-solr
    image: ${SOLR_CONTAINER}
    depends_on:
      - zk
    networks:
      - demigod
    volumes:
      - "./logs:/var/solr/logs"
    environment:
      ZK_HOST: "zk:2181"
      VERBOSE: "true"
      SOLR_JAVA_MEM: "-Xms2G -Xmx2G"
      SOLR_HOST: "solr"
      SOLR_PORT: "8983"
      SOLR_PATH: "/solr"
      PROJECT_NAME: ${PROJECT_NAME}
    entrypoint:
      - bash
      - "-c"
      - "exec solr -c -f -z zk:2181; exec solr create_collection -c ${PROJECT_NAME} -d /opt/search_api_solr/jump-start/solr8/cloud-config-set;"
    healthcheck:
      test: ["CMD-SHELL", "/healthcheck.sh"]
      start_period: 15s
      interval: 30s
      timeout: 5s
      retries: 3
    expose:
      - "8983"
    extra_hosts:
      - "solr:127.0.0.1"
    ports:
      - "8983:8983"

  zk:
    container_name: ${PROJECT_NAME}-zk
    image: zookeeper
    networks:
      - demigod
    volumes:
      - "./logs:/var/log/zk"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"
      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok
      SERVER_JVMFLAGS: "-Xms2048m -Xmx2048m"
      ZOO_LOG4J_PROP: "INFO,ROLLINGFILE"
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_LOG_DIR: "/var/log/zk"
    expose:
      - "2181"
    ports:
      - "2181:2181"

  zk-ui:
    container_name: ${PROJECT_NAME}-zk-ui
    image: elkozmon/zoonavigator
    depends_on:
      - zk
    networks:
      - demigod
    expose:
      - "9000"
    ports:
      - "9001:9000"
    environment:
      HTTP_PORT: "9000"
      AUTO_CONNECT_CONNECTION_STRING: "zk:2181"

volumes:
  web: {}
  initmysql: {}
  data:
  dbdata:
    name: ${PROJECT_NAME}_database
networks:
  demigod:
